apply plugin: "com.android.library"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "kotlin-parcelize"
apply plugin: "kotlin-kapt"
apply plugin: "kotlin-android"
apply plugin: "com.google.dagger.hilt.android"
apply plugin: "androidx.navigation.safeargs.kotlin"

def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("local.properties")))

android {
    compileSdk Android.compileSdk

    defaultConfig {
        minSdk Android.minSdk
        targetSdk Android.targetSdk
        versionCode Android.versionCode
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions += "environment"

    productFlavors {
        redfile {
            dimension "environment"
            buildConfigField "String", "BUILD_VARIANT", "\"REDFILE\""
        }

        redcamera {
            dimension "environment"
            buildConfigField "String", "BUILD_VARIANT", "\"REDCAMERA\""
        }

        greenfile {
            dimension "environment"
            buildConfigField "String", "BUILD_VARIANT", "\"GREENFILE\""
        }

        greencamera {
            dimension "environment"
            buildConfigField "String", "BUILD_VARIANT", "\"GREENCAMERA\""
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
        freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
    }

    kapt {
        correctErrorTypes true
    }

    buildFeatures {
        viewBinding true
    }

    packagingOptions {
        exclude("META-INF/AL2.0")
        exclude("META-INF/LGPL2.1")
    }
}

dependencies{

    implementation Androidx.core
    implementation Androidx.appCompat
    implementation Google.material
    implementation Androidx.constraint

    // Lifecycle Components
    implementation Androidx.viewModel
    implementation Androidx.liveData
    implementation Androidx.runtime
    implementation Androidx.viewModelSavedState
    implementation Androidx.commonJava

    // Hilt
    implementation(Hilt.hiltAndroid)
    kapt(Hilt.hiltCompiler)

    // Coroutine
    implementation Kotlin.coroutineCore
    implementation Kotlin.coroutineAndroid

    //Navigation Component
    implementation Jetpack.fragmentNavigation
    implementation Jetpack.uiNavigation

    // Datastore
    implementation Androidx.dataStore

    // Timber
    implementation Timber.library
}